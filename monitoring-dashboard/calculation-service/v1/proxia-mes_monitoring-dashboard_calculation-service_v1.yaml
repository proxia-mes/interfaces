---
openapi: 3.0.3
info:
  title: PROXIA-MES Monitoring-Dashboard Calculation-Service API
  description: PROXIA-MES Monitoring-Dashboard Calculation-Service API
  version: '1.0.13'
servers:
  - url: "http://localhost:5004/proxia-mes/monitoring-dashboard/calculation-service/v1"
tags:
  - name: widget-calculations
    description: Calculations for widgets
  - name: explorer
    description: Objects for explorer
paths:
  "/planning-accuracy-widget":
    post:
      tags:
        - widget-calculations
      summary: calculates planning-accuracy-widget data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widget'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/planningAccuracyWidgetData"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/planning-accuracy-widget-drill-down":
    post:
      tags:
        - widget-calculations
      summary: calculates planning-accuracy-widget-drill-down data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widget'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/planningAccuracyWidgetDrillDownData"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/resource-status-widget":
    post:
      tags:
        - widget-calculations
      summary: calculates resource-status-widget data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widget'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resourceStatusWidgetData"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/resource-status-widget-drill-down":
    post:
      tags:
        - widget-calculations
      summary: calculates resource-status-widget-drill-down data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widget'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resourceStatusWidgetDrillDownData"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/processing-degree-widget":
    post:
      tags:
        - widget-calculations
      summary: calculates processing-degree-widget data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widget'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/processingDegreeWidgetData"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/processing-degree-widget-drill-down":
    post:
      tags:
        - widget-calculations
      summary: calculates processing-degree-widget-drill-down data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widget'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/processingDegreeWidgetDrillDownData"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/persons":
    get:
      tags:
        - explorer
      summary: returns all persons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/persons"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/person/{personId}":
    get:
      tags:
        - explorer
      summary: returns a person
      parameters:
        - name: personId
          in: path
          required: true
          style: simple
          schema:
            $ref: "#/components/schemas/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/orders":
    get:
      tags:
        - explorer
      summary: returns all orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/order/{orderId}":
    get:
      tags:
        - explorer
      summary: returns an order
      parameters:
        - name: orderId
          in: path
          required: true
          style: simple
          schema:
            $ref: "#/components/schemas/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/worktickets":
    get:
      tags:
        - explorer
      summary: returns all worktickets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/worktickets"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/workticket/{workticketId}":
    get:
      tags:
        - explorer
      summary: returns a workticket
      parameters:
        - name: workticketId
          in: path
          required: true
          style: simple
          schema:
            $ref: "#/components/schemas/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workticket"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/workplaces":
    get:
      tags:
        - explorer
      summary: returns all workplaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workplaces"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/workplace/{workplaceId}":
    get:
      tags:
        - explorer
      summary: returns a workplace
      parameters:
        - name: workplaceId
          in: path
          required: true
          style: simple
          schema:
            $ref: "#/components/schemas/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workplace"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/machines":
    get:
      tags:
        - explorer
      summary: returns all machines
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/machines"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/machine/{machineId}":
    get:
      tags:
        - explorer
      summary: returns a machine
      parameters:
        - name: machineId
          in: path
          required: true
          style: simple
          schema:
            $ref: "#/components/schemas/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/machine"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
components:
  schemas:
    id:
      type: string
      description: The unque id of an element, UUID4 or C_* e.g. 2a6783cc-f1b4-4b74-9fd8-e6460e9a0028
      maxLength: 50
      minLength: 3
    name:
      type: string
      description: The name of an element
      maxLength: 50
      minLength: 3
    widget:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: The unque id of a widget (UUID4)
          example: 2a6783cc-f1b4-4b74-9fd8-e6460e9a0028
          maxLength: 50
          minLength: 10
        name:
          type: string
          description: The name of a widget
          maxLength: 100
          minLength: 3
        description:
          type: string
          description: The description of a widget
          maxLength: 255
          minLength: 0
        x:
          type: number
          format: int32
          minimum: 0
          maximum: 100
          default: 0
          nullable: true
        y:
          type: number
          format: int32
          minimum: 0
          maximum: 100
          default: 0
          nullable: true
        cols:
          type: number
          format: int32
          minimum: 1
          maximum: 100
          default: 1
          nullable: true
        rows:
          type: number
          format: int32
          minimum: 1
          maximum: 100
          default: 1
          nullable: true
        notification:
          type: boolean
        threshold:
          type: object
          properties:
            low:
              type: integer
              nullable: true
            medium:
              type: integer
              nullable: true
            high:
              type: integer
              nullable: true
        resourceStatusWidget:
          $ref: '#/components/schemas/resourceStatusWidget'
        processingDegreeWidget:
          $ref: '#/components/schemas/processingDegreeWidget'
        planningAccuracyWidget:
          $ref: '#/components/schemas/planningAccuracyWidget'
    planningAccuracyWidget:
      type: object
      required:
        - timePeriod
        - resources
      properties:
        resources:
          type: array
          items:
            type: string
            description: The unque id of a resource
            example: 2a6783cc-f1b4-4b74-9fd8-e6460e9a0028
            maxLength: 50
            minLength: 3
          minItems: 0
          maxItems: 100
        timePeriod:
          type: integer
          description: the monitored time period
        presentation:
          type: string
          enum:
            - 'widget'
            - 'drill-down'
    processingDegreeWidget:
      type: object
      required:
        - earlyThreshold
        - delayThreshold
        - presentation
      properties:
        delayThreshold:
          type: integer
        earlyThreshold:
          type: integer
        presentation:
          type: string
          enum:
            - 'text'
            - 'bar'
            - 'diagram'
            - 'drill-down'
    resourceStatusWidget:
      type: object
      required:
        - resources
        - resourceStatuses
        - presentation
      properties:
        resources:
          type: array
          items:
            type: string
            description: The unque id of a resource
            example: 2a6783cc-f1b4-4b74-9fd8-e6460e9a0028
            maxLength: 50
            minLength: 3
          minItems: 0
          maxItems: 100
        resourceStatuses:
          type: array
          items:
            type: string
            description: The unque id of a resource
            example: 2a6783cc-f1b4-4b74-9fd8-e6460e9a0028
            maxLength: 50
            minLength: 3
          minItems: 0
          maxItems: 100
        presentation:
          type: string
          enum:
            - 'aggregated'
            - 'detail'
            - 'drill-down'
    processingDegreeWidgetData:
      type: object
      properties:
        toEarly:
          type: integer
          nullable: true
        toLate:
          type: integer
          nullable: true
        inTime:
          type: integer
          nullable: true
    processingDegreeWidgetDrillDownData:
      type: array
      items:
        $ref: '#/components/schemas/processingDegreeWidgetDrillDownOrder'
    processingDegreeWidgetDrillDownOrder:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        type:
          type: string
          description: The type of the order
          maxLength: 255
          minLength: 3
        customer:
          type: string
          description: The customer of the order
          maxLength: 255
          minLength: 1
        endScheduled:
          type: string
          format: date-time
          nullable: true
          description: The scheduled end of the order
        priority:
          type: number
          nullable: true
          description: The priority of the order
        punctual:
          type: boolean
          nullable: true
        progress:
          type: integer
          nullable: true
        workticketsCount:
          type: integer
          nullable: true
        workticketsOpen:
          type: integer
          nullable: true
        workticketsDone:
          type: integer
          nullable: true
        workticketsActive:
          type: array
          items:
            type: object
            title: activeWorkticket
            properties:
              id:
                $ref: '#/components/schemas/id'
              name:
                $ref: '#/components/schemas/name'
    resourceStatusWidgetData:
      type: object
      properties:
        values:
          type: array
          items:
            type: integer
        labels:
          type: array
          items:
            type: string
        colors:
          type: array
          items:
            type: string
    resourceStatusWidgetDrillDownData:
      type: array
      items:
        $ref: '#/components/schemas/resource'
    planningAccuracyWidgetData:
      type: object
      properties:
        resourceCount:
          type: integer
        inOrderCount:
          type: integer
    planningAccuracyWidgetDrillDownData:
      type: array
      items:
        $ref: '#/components/schemas/planningAccuracyWidgetDrillDownResource'
    planningAccuracyWidgetDrillDownResource:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/resource'
        plannedWorktickets:
          type: array
          items:
            type: object
            title: plannedWorkticket
            properties:
              id:
                $ref: '#/components/schemas/id'
              name:
                $ref: '#/components/schemas/name'
        lastWorktickets:
          type: array
          items:
            type: object
            title: lastWorkticket
            properties:
              id:
                $ref: '#/components/schemas/id'
              name:
                $ref: '#/components/schemas/name'
    resource:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        plant:
          type: string
          description: The plant of the machine
          maxLength: 255
          minLength: 3
        state:
          type: object
          properties:
            name:
              $ref: '#/components/schemas/name'
            color:
              type: string
        groupName:
          $ref: '#/components/schemas/name'
        mainGroupName:
          $ref: '#/components/schemas/name'
        resourceType:
          type: string
          enum:
            - 'machine'
            - 'workplace'
        allocatedWorktickets:
          type: array
          items:
            type: object
            title: allocatedWorkticket
            properties:
              id:
                $ref: '#/components/schemas/id'
              name:
                $ref: '#/components/schemas/name'
        allocatedResource:
          type: array
          description: A machine or workplace has allocated Persons, a person has allocated machines or workplaces
          items:
            type: object
            title: allocatedResource
            properties:
              id:
                $ref: '#/components/schemas/id'
              name:
                $ref: '#/components/schemas/name'
    workplaces:
      type: array
      items:
        $ref: '#/components/schemas/workplace'
    workplace:
      type: object
      required:
        - resource
      properties:
        resource:
          $ref: '#/components/schemas/resource'
    machines:
      type: array
      items:
        $ref: '#/components/schemas/machine'
    machine:
      type: object
      required:
        - resource
      properties:
        resource:
          $ref: '#/components/schemas/resource'
        description:
          type: string
          description: The description of the machine
          maxLength: 2000
          minLength: 0
        inventoryNumber:
          type: string
          description: The inventory number of the machine
          maxLength: 50
          minLength: 0
        manufacturer:
          type: string
          description: The manufacurer of the machine
          maxLength: 50
          minLength: 0
        machineType:
          type: string
          description: The type of the machine
          maxLength: 50
          minLength: 0
        controlUnit:
          type: string
          description: The control unit of the machine
          maxLength: 50
          minLength: 0
        factoryNumber:
          type: string
          description: The type of the machine
          maxLength: 50
          minLength: 0
    persons:
      type: array
      items:
        $ref: '#/components/schemas/person'
    person:
      type: object
      required:
        - resource
      properties:
        resource:
          $ref: '#/components/schemas/resource'
        lastName:
          type: string
          description: The lastname of the person
          maxLength: 50
          minLength: 0
        firstName:
          type: string
          description: The firstname of the person
          maxLength: 50
          minLength: 0
        persId:
          type: string
          description: The HR person id
          maxLength: 50
          minLength: 0
        mail:
          type: string
          description: The e-mail address
          maxLength: 50
          minLength: 0
        mobile:
          type: string
          description: The mobile phone number of the person
          maxLength: 50
          minLength: 0
    orders:
      type: array
      items:
        $ref: '#/components/schemas/order'
    order:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        plant:
          type: string
          description: The plant id of the order
          maxLength: 255
          minLength: 3
        type:
          type: string
          description: The type of the order
          maxLength: 255
          minLength: 3
        customer:
          type: string
          description: The customer of the order
          maxLength: 255
          minLength: 1
        customerOrder:
          type: string
          description: The customer-order of the order
          maxLength: 255
          minLength: 1
        customerOrderNumber:
          type: string
          description: The customer-order number of the order
          maxLength: 255
          minLength: 1
        customerOrderDelivery:
          type: string
          format: date-time
          nullable: true
          description: The scheduled delivery of the customer-order of the order
        beginScheduled:
          type: string
          format: date-time
          nullable: true
          description: The scheduled begin of the order
        endScheduled:
          type: string
          format: date-time
          nullable: true
          description: The scheduled end of the order
        deliveryScheduled:
          type: string
          format: date-time
          nullable: true
          description: The scheduled delivery of the order
        earliestStartScheduled:
          type: string
          format: date-time
          nullable: true
          description: The earliest scheduled begin of the order
        desiredDue:
          type: string
          format: date-time
          nullable: true
          description: The scheduled desire of the order
        priority:
          type: number
          description: The priority of the order
        description:
          type: string
          description: The description of the order
          maxLength: 255
          minLength: 1
        progress:
          type: integer
          nullable: true
        workticketsCount:
          type: integer
          nullable: true
        workticketsOpen:
          type: array
          items:
            type: object
            title: activeWorkticket
            properties:
              id:
                $ref: '#/components/schemas/id'
              name:
                $ref: '#/components/schemas/name'
        workticketsDone:
          type: array
          items:
            type: object
            title: activeWorkticket
            properties:
              id:
                $ref: '#/components/schemas/id'
              name:
                $ref: '#/components/schemas/name'
        workticketsActive:
          type: array
          items:
            type: object
            title: activeWorkticket
            properties:
              id:
                $ref: '#/components/schemas/id'
              name:
                $ref: '#/components/schemas/name'
    worktickets:
      type: array
      items:
        $ref: '#/components/schemas/workticket'
    workticket:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        beginScheduled:
          type: string
          format: date-time
          nullable: true
          description: The scheduled begin of the wt
        endScheduled:
          type: string
          format: date-time
          nullable: true
          description: The scheduled end of the wt
        status:
          type: string
          description: The status of the wt
          maxLength: 255
          minLength: 3
        ppsOrder:
          type: string
          description: The order of the wt in the PPS
          maxLength: 255
          minLength: 3
        ppsArticleNumber:
          type: string
          description: The article number of the wt in the PPS
          maxLength: 255
          minLength: 3
        ppsArticle:
          type: string
          description: The article of the wt in the PPS
          maxLength: 255
          minLength: 3
        targetQty:
          type: number
          description: The target quantitiy of the wt
        plannedSetuptime:
          type: number
          nullable: true
        plannedProcesstime:
          type: number
          nullable: true
        confirmedGoodQty:
          type: number
          nullable: true
        confirmedScrapQty:
          type: number
          nullable: true
        confirmedReworkQty:
          type: number
          nullable: true
        goodQty:
          type: number
          nullable: true
          description: The good quantitiy of the wt, calculated from TSF_WT_QTY
        scrapQty:
          type: number
          nullable: true
          description: The scrap quantitiy of the wt, calculated from TSF_WT_QTY
        reworkQty:
          type: number
          nullable: true
          description: The rework quantitiy of the wt, calculated from TSF_WT_QTY
        confirmedSetuptime:
          type: number
          nullable: true
        confirmedProcesstime:
          type: number
          nullable: true
        type:
          type: string
          description: The type of the wt
          maxLength: 255
          minLength: 3
        plant:
          type: string
          description: The plant id of the wt
          maxLength: 255
          minLength: 3
        earliestStartScheduled:
          type: string
          format: date-time
          nullable: true
          description: The earliest scheduled begin of the wt
        desiredDue:
          type: string
          format: date-time
          nullable: true
          description: The scheduled desire of the wt
        mappedResource:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
        persons:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/id'
              name:
                $ref: '#/components/schemas/name'
        order:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'         