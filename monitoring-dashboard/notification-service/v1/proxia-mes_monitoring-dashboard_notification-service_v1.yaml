---
openapi: 3.0.3
info:
  title: PROXIA-MES Monitoring-Dashboard Notification-Service API
  description: PROXIA-MES Monitoring-Dashboard Notification-Service API
  version: '1.0.2'
servers:
  - url: "http://localhost:8080/proxia-mes/monitoring-dashboard/notification-service/v1"
tags:
  - name: notifications
    description: Everything about notifications
paths:
  "/notifications":
    get:
      tags:
        - notifications
      summary: returns all notifications for a user
      parameters:
        - name: userId
          in: query
          required: true
          style: form
          schema:
            $ref: "#/components/schemas/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notifications"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/notification/{userId}/{notificationId}":
    delete:
      tags:
        - notifications
      summary: deletes a notification for a user
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            $ref: "#/components/schemas/id"
        - name: notificationId
          in: path
          required: true
          style: simple
          schema:
            $ref: "#/components/schemas/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notification"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
    get:
      tags:
        - notifications
      summary: returns a notification for a user
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            $ref: "#/components/schemas/id"
        - name: notificationId
          in: path
          required: true
          style: simple
          schema:
            $ref: "#/components/schemas/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notification"
        '204':
          description: No Content
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '500':
          description: Internal Server Error
          content: { }
  "/notification/{userId}":
    post:
      tags:
        - notifications
      summary: adds a new notification for a user
      security:
        - OpenID:
            - admin
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            $ref: "#/components/schemas/id"
      requestBody:
        description: notification object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notification"
        required: true
      responses:
        '200':
          description: OK
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '409':
          description: Conflict
          content: { }
        '500':
          description: Internal Server Error
          content: { }
    put:
      tags:
        - notifications
      summary: modifies an existing notification for a user
      security:
        - OpenID:
            - admin
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            $ref: "#/components/schemas/id"
      requestBody:
        description: notification object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notification"
        required: true
      responses:
        '200':
          description: OK
          content: { }
        '400':
          description: Bad Request
          content: { }
        '401':
          description: Unauthorized
          content: { }
        '403':
          description: Forbidden
          content: { }
        '409':
          description: Conflict
          content: { }
        '500':
          description: Internal Server Error
          content: { }
components:
  securitySchemes:
    OpenID:
      type: openIdConnect
      openIdConnectUrl: http://localhost:8080/auth/realms/xi-mes/.well-known/openid-configuration
  schemas:
    id:
      type: string
      description: The unque id of an element, UUID4 or C_* e.g. 2a6783cc-f1b4-4b74-9fd8-e6460e9a0028
      maxLength: 50
      minLength: 3
    name:
      type: string
      description: The name of an element
      maxLength: 50
      minLength: 3
    notifications:
      type: array
      items:
        $ref: '#/components/schemas/notification'
    notification:
      type: object
      required:
        - id
        - userId
        - subject
        - description
        - date
        - content
        - priority
        - read
      properties:
        id:
          $ref: '#/components/schemas/id'
        userId:
          $ref: '#/components/schemas/name'
        dashboardId:
          $ref: '#/components/schemas/id'
        widgetId:
          $ref: '#/components/schemas/id'
        subject:
          type: string
          description: The subject of the notification
          maxLength: 100
          minLength: 3
        description:
          type: string
          description: The short description of the notification
          maxLength: 100
          minLength: 3
        date:
          type: string
          format: date-time
          description: The date-time of the notification
        content:
          type: string
          description: The long content of the notification
          maxLength: 1000
          minLength: 3
        priority:
          type: string
          enum:
            - 'low'
            - 'medium'
            - 'high'
        read:
          type: boolean
        
            
        

            